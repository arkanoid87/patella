--[[ org.apache.arrow.flatbuf.Union

  Automatically generated by the FlatBuffers compiler, do not modify.
  Or modify. I'm a message, not a cop.

  flatc version: 2.0.5

  Declared by  : //Schema.fbs
  Rooting type : org.apache.arrow.flatbuf.Schema (//Schema.fbs)

--]]

local flatbuffers = require('flatbuffers')

-- A union is a complex type with children in Field
-- By default ids in the type vector refer to the offsets in the children
-- optionally typeIds provides an indirection between the child offset and the type id
-- for each child `typeIds[offset]` is the id used in the type vector
local Union = {}
local mt = {}

function Union.New()
  local o = {}
  setmetatable(o, {__index = mt})
  return o
end

function mt:Init(buf, pos)
  self.view = flatbuffers.view.New(buf, pos)
end

function mt:Mode()
  local o = self.view:Offset(4)
  if o ~= 0 then
    return self.view:Get(flatbuffers.N.Int16, self.view.pos + o)
  end
  return 0
end

function mt:TypeIds(j)
  local o = self.view:Offset(6)
  if o ~= 0 then
    local a = self.view:Vector(o)
    return self.view:Get(flatbuffers.N.Int32, a + ((j-1) * 4))
  end
  return 0
end

function mt:TypeIdsLength()
  local o = self.view:Offset(6)
  if o ~= 0 then
    return self.view:VectorLen(o)
  end
  return 0
end

function Union.Start(builder)
  builder:StartObject(2)
end

function Union.AddMode(builder, mode)
  builder:PrependInt16Slot(0, mode, 0)
end

function Union.AddTypeIds(builder, typeIds)
  builder:PrependUOffsetTRelativeSlot(1, typeIds, 0)
end

function Union.StartTypeIdsVector(builder, numElems)
  return builder:StartVector(4, numElems, 4)
end

function Union.End(builder)
  return builder:EndObject()
end

return Union