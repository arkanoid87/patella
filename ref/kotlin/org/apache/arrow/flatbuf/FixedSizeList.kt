// automatically generated by the FlatBuffers compiler, do not modify

package org.apache.arrow.flatbuf

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
@ExperimentalUnsignedTypes
class FixedSizeList : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : FixedSizeList {
        __init(_i, _bb)
        return this
    }
    /**
     * Number of list items per value
     */
    val listSize : Int
        get() {
            val o = __offset(4)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_2_0_0()
        fun getRootAsFixedSizeList(_bb: ByteBuffer): FixedSizeList = getRootAsFixedSizeList(_bb, FixedSizeList())
        fun getRootAsFixedSizeList(_bb: ByteBuffer, obj: FixedSizeList): FixedSizeList {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createFixedSizeList(builder: FlatBufferBuilder, listSize: Int) : Int {
            builder.startTable(1)
            addListSize(builder, listSize)
            return endFixedSizeList(builder)
        }
        fun startFixedSizeList(builder: FlatBufferBuilder) = builder.startTable(1)
        fun addListSize(builder: FlatBufferBuilder, listSize: Int) = builder.addInt(0, listSize, 0)
        fun endFixedSizeList(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
