<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace org\apache\arrow\flatbuf;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// ----------------------------------------------------------------------
/// A Buffer represents a single contiguous memory segment
class Buffer extends Struct
{
    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return Buffer
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// The relative offset into the shared memory page where the bytes for this
    /// buffer starts
    /**
     * @return long
     */
    public function GetOffset()
    {
        return $this->bb->getLong($this->bb_pos + 0);
    }

    /// The absolute length (in bytes) of the memory buffer. The memory is found
    /// from offset (inclusive) to offset + length (non-inclusive). When building
    /// messages using the encapsulated IPC message, padding bytes may be written
    /// after a buffer, but such padding bytes do not need to be accounted for in
    /// the size here.
    /**
     * @return long
     */
    public function GetLength()
    {
        return $this->bb->getLong($this->bb_pos + 8);
    }


    /**
     * @return int offset
     */
    public static function createBuffer(FlatBufferBuilder $builder, $offset, $length)
    {
        $builder->prep(8, 16);
        $builder->putLong($length);
        $builder->putLong($offset);
        return $builder->offset();
    }
}
